/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 abhishek3.glb 
*/

import React, {useEffect, useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { subscribe } from '../events'


export function Abhishek3Model({ shouldTalk,setAnimationDuration, ...props }) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('/models/abhishek3.glb')
  const { actions } = useAnimations(animations, group);

  console.log("action -------useanimation ----value---",actions);

  useEffect(()=>{
    console.log("Subscribe it")
    subscribe("startAnimation",StartTalk)
      // window.addEventListener("startAnimation",(e)=>{ StartTalk(e);});
    },[]);

    
function StartTalk(data){
  console.log("REceived data ",data)
var talk=data.detail.talk;
//var talk=data.detail.talk;

    if (talk==true) {
      
      // actions.talk.play();
    
      // idleaction.idlemen.stop()
      actions.idelandtalk.play();
      
      console.log("Enetered", "for Talk***********")
     
      
    } else {  
      console.log("Enetered", "DStop")

      actions.idelandtalk.stop();
      // actions.talk.stop();
      // idleaction.idlemen.reset().fadeIn(0.8).play();

      // group.current.position.set(0, 1, 2);
      
    
      
    }
 

 
}

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Armature" rotation={[Math.PI / 2, 0, 0]}>
          <primitive object={nodes.mixamorigHips} />
          <skinnedMesh name="rp_eric_rigged_001_geo" geometry={nodes.rp_eric_rigged_001_geo.geometry} material={materials.rp_eric_rigged_001_mat} skeleton={nodes.rp_eric_rigged_001_geo.skeleton} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/abhishek3.glb')
